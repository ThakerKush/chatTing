version: "3.9"
name: "chat-ting"
services:
  postgres:
    image: postgres:alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: "${USERNAME}"
      POSTGRES_PASSWORD: "${PASSWORD}"
      POSTGRES_DB: "${DATABASE}"
    ports:
      - "${PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    container_name: redis-1
    ports:
      - ${RPORT}:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5

  syncing-service:
    env_file: .env
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - HOST=${HOST}
      - DIALECT=${DIALECT}
      - PORT=${PORT}
      - RPORT=${RPORT}
      - RHOST=${RHOST}
    build: ./syncingService
    ports:
      - 3001:3001
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "./dist/healthcheck.js"]
      interval: 300s
      timeout: 10s
      retries: 5
      start_period: 30s

  chat-service:
    env_file: .env
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - HOST=${HOST}
      - DIALECT=${DIALECT}
      - PORT=${PORT}
      - RPORT=${RPORT}
      - RHOST=${RHOST}
      - SECRET=${SECRET}
    build: ./chatService
    ports:
      - 3000:3000
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres:
    driver: local
